# Base de données :

# Create database model from JPA entities ? (none, create, or in development : create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# en mémoire (H2) :
# (ATTENTION toutes les données sont perdues à chaque lancement,
# à commenter pour configurer un autre serveur de bases de données)
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
spring.datasource.username=sa
spring.datasource.password=sa
# postgresql - default :
#spring.datasource.url=jdbc:mysql://localhost:5432/postgres
#spring.datasource.username=postgres
#spring.datasource.password=password
# postgresql - clean setup :
#spring.datasource.url=jdbc:postgresql://localhost:5432/ipi_jva320_web
#spring.datasource.username=ipi
#spring.datasource.password=ipi
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# mysql - default :
#spring.datasource.url=jdbc:mysql://localhost:3306/mysql?serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=root
# mysql - clean setup :
#spring.datasource.url=jdbc:mysql://localhost:3306/ipi_jva320_web?serverTimezone=UTC
#spring.datasource.username=ipi
#spring.datasource.password=ipi
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect


# Web :

spring.mvc.format.date=iso
#spring.mvc.format.date=yyyy-MM-dd

#server.error.whitelabel.enabled=false
#spring.mvc.throw-exception-if-no-handler-found=true
#spring.resources.add-mappings=false

# permettre d'accéder sans aucun controller aussi aux templates (i.e. comme des ressources statiques)
spring.web.resources.static-locations=classpath:/static/,classpath:/templates/
# méthode alternative pour cela en renommant le dossier templates/ en static/
##spring.thymeleaf.prefix=classpath:/static/
# défauts
#spring.thymeleaf.suffix=.html
#spring.thymeleaf.prefix=classpath:/templates/

# désactiver le cache pour toujours rafraichir en cours de développement
spring.thymeleaf.cache=false
